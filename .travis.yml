branches:
 only:
  - master
  - /^[0-9]+(\.[0-9]+)*(\.post[0-9]+)?$/

language: python

matrix:
  include:
    - os: linux
      arch: arm64-graviton2
      virt: vm
      group: edge
      dist: focal
      language: generic

cache:
  directories:
    # Cache downloaded bottles
    - $HOME/Library/Caches/Homebrew
    # pyenv
    - $HOME/.pyenv_cache
    - $HOME/.pyenv/versions/3.7.8
    - $HOME/.pyenv/versions/2.7.15
    # scikit-ci-addons
    - $HOME/downloads

before_install:
  - |
    # Workaround the following error occuring because python installation is cached but gettext dependency is not
    #   dyld: Library not loaded: /usr/local/opt/gettext/lib/libintl.8.dylib
    #     Referenced from: /Users/travis/.pyenv/versions/3.7.2/bin/python
    #     Reason: Incompatible library version: python requires version 11.0.0 or later, but libintl.8.dylib provides version 10.0.0
    if [[ "$TRAVIS_OS_NAME" == "osx" && "${PYTHON_VERSION}" == "3.7.8" ]]; then
      brew install gettext
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        mkdir $HOME/bin; ln -s $(which pip2) $HOME/bin/pip; ln -s $(which python2) $HOME/bin/python
        python scripts/ssl-check.py
        python -m pip install --disable-pip-version-check --upgrade pip
        pip install -U scikit-ci scikit-ci-addons
        ci_addons --install ../addons
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        docker run -t --rm \
            -v $(pwd):/io \
            --env TRAVIS=True \
            --env TRAVIS_OS_NAME="${TRAVIS_OS_NAME}" \
            quay.io/pypa/manylinux2014_aarch64 \
            /io/scripts/manylinux2014-aarch64-build-and-test-wheel.sh
    fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci install
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        pip install twine
    fi

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci test
    fi

after_success:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci after_test
    fi
    pwd && ls dist; PATH=~/.pyenv/versions/${PYTHON_VERSION}/bin/:$PATH && twine --version

deploy:
  # deploy-release
  - provider: script
    script: pwd && ls dist;echo "deploy-release" && PATH=~/.pyenv/versions/${PYTHON_VERSION}/bin/:$PATH && twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
    skip_cleanup: true
    on:
      repo: ${TRAVIS_REPO_SLUG}
      tags: true
